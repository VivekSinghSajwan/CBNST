//worst fit
#include<stdio.h>
#include<stdbool.h>

int n,m;
int main()
{
    printf("Enter no. of blocks and processes: ");
    scanf("%d%d",&n,&m);
    int blocks[n];
    int processes[m];
    printf("Enter n blocks: ");
    for(int i=0; i<n; i++)
        scanf("%d",&blocks[i]);
    printf("Enter m processes: ");
    for(int i=0; i<m; i++)
        scanf("%d",&processes[i]);
    int allocated[m];
    for(int i=0; i<m; i++)
        allocated[i] = -1;
    bool occupied[n];
    for(int i=0; i<n; i++)
        occupied[i] = false;

    for(int i=0; i<m; i++)//process
    {
        int max = processes[i];
        int indx = -1;
        for(int j=0; j<n; j++)
        {
            if(occupied[j] == false && blocks[j] >= max)
            {
                max = blocks[j];
                indx = j;
            }
        }
        if(indx != -1)
        {
            allocated[i] = indx+1;
            blocks[indx] = true;
        }
    }

    //answer
    for(int i=0; i<m; i++)
    {
        printf("%d: ",processes[i]);
        if(allocated[i] == -1)
            printf("No blocks available\n");
        else    
            printf("%d: \n",allocated[i]);
    }
    return 0;
}
